<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
	<!-- 组件扫描 扫描带有Controller注解以外的类 -->
	<context:component-scan base-package="org.agent">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	<!-- 数据源 -->
	<context:property-placeholder location="classpath:db.properties" />
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driver}"></property>
		<property name="jdbcUrl" value="${jdbc.url}"></property>
		<property name="user" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>
	<!-- 事务 -->
	<bean id="dataSourceTransactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<tx:annotation-driven transaction-manager="dataSourceTransactionManager" />

	<!-- spring整合Mybatis -->

	<!-- 1.SqlSession对象的创建 管理等 -->
	<bean class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 数据源 -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- Mybatis的全局配置文件 -->
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<!-- mybatis的sql映射文件 -->
		<!-- <property name="mapperLocations" value="classpath:org.agent.dao/*.xml"></property> -->
		<!-- 别名处理 -->
		<property name="typeAliasesPackage" value="org.agent.pojo"></property>
	</bean>

	<!-- 2.Mapper接口代理实现类对象的创建 管理等 -->
	<!-- MapperScannerConfigurer 会对指定包下的Mapper接口生成代理实现类对象并管理到IOC容器对象 中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="org.agent.dao"></property>
	</bean>
	<!--mybatis-spring:scan与 MapperScannerConfigurer完成的功能一致只需配置其中一个即可 -->
	<!-- <mybatis-spring:scan base-package="com.bdqn.ssm.mapper"/> -->
</beans>
